<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ include file="EF.Utility.CS.ttinclude"#><# 	    
    CodeGenerationTools code = new CodeGenerationTools(this);
	MetadataTools ef = new MetadataTools(this);
	MetadataLoader loader = new MetadataLoader(this);
	CodeRegion region = new CodeRegion(this);

	string inputFile = @"..\..\..\..\Entity\Seyehat\Seyehat.edmx"; // Her UnitOfWork için bu kısım değişecek. (@"..\..\..\..\THSSBS.Entity\Modules\xxx\xxx.edmx")
	EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);

	string namespaceName = code.VsNamespaceSuggestion();

	EntityContainer container = ItemCollection.GetItems<EntityContainer>().FirstOrDefault();
	if (container == null)
	{
		return "// No EntityContainer exists in the model, so no code was generated";
	}
#>

<#
if (!String.IsNullOrEmpty(namespaceName))
{
#>
namespace <#=code.EscapeNamespace(namespaceName)#>
{
    using Common;
    using Entity.Seyehat; <# // Her UnitOfWork için bu kısım değişecek. (using Entity.Modules.xxx) #>

<#
    PushIndent(CodeRegion.GetIndent(1));
}
#>

<#=Accessibility.ForType(container)#> interface ISeyehatUnitOfWork : IUnitOfWork <# // Her UnitOfWork için bu kısım (sadece interface adı) değişecek. #>

{<#		
foreach (EntitySet entitySet in container.BaseEntitySets.OfType<EntitySet>())
{
#>  
    IRepository<<#=code.Escape(entitySet.ElementType)#>> <#=code.Escape(entitySet.ElementType)#> { get; } 
<#      
} 
#>
}
<#  ClearIndent(); #>
}